{"version":3,"file":"403.index.js","mappingssources":[".././dist/services/baseline.service.js"],"sourcesContent":["import { logger } from '../utils/logger.js';\nexport class BaselineService {\n    baselineCache = new Map();\n    async getBaselineInfo(featureName) {\n        if (this.baselineCache.has(featureName)) {\n            return this.baselineCache.get(featureName) || null;\n        }\n        logger.debug(`Looking up baseline info for: ${featureName}`);\n        let baselineData = await this.getFromWebFeaturesPackage(featureName);\n        if (!baselineData) {\n            baselineData = this.getFallbackBaselineData(featureName);\n        }\n        this.baselineCache.set(featureName, baselineData);\n        return baselineData;\n    }\n    async isFeatureSupported(feature, browsers) {\n        const baselineInfo = await this.getBaselineInfo(feature);\n        if (!baselineInfo) {\n            return false;\n        }\n        for (const browser of browsers) {\n            if (!this.isSupportedInBrowser(baselineInfo, browser)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async getFromWebFeaturesPackage(featureName) {\n        try {\n            let webFeaturesModule;\n            try {\n                webFeaturesModule = await import('web-features');\n            }\n            catch (importError) {\n                logger.debug(`Failed to import web-features package: ${importError}`);\n                try {\n                    webFeaturesModule = await import('web-features/index.js');\n                }\n                catch (altImportError) {\n                    logger.debug(`Alternative import failed: ${altImportError}`);\n                    return null;\n                }\n            }\n            const features = webFeaturesModule?.features || webFeaturesModule?.default?.features;\n            if (!features) {\n                logger.debug('No features data found in web-features package');\n                return null;\n            }\n            const possibleIds = this.mapFeatureNameToWebFeatureId(featureName);\n            for (const featureId of possibleIds) {\n                const feature = features[featureId];\n                if (feature && feature.status) {\n                    logger.debug(`Found web-features data for: ${featureName} (id: ${featureId})`);\n                    return this.convertWebFeatureToBaselineInfo(feature);\n                }\n            }\n            const bcdKey = this.mapFeatureNameToBCDKey(featureName);\n            if (bcdKey) {\n                try {\n                    const computeBaseline = await import('compute-baseline');\n                    const getStatus = computeBaseline.getStatus || computeBaseline.default?.getStatus;\n                    if (getStatus) {\n                        const status = getStatus(null, bcdKey);\n                        if (status) {\n                            logger.debug(`Found compute-baseline data for: ${featureName} (BCD: ${bcdKey})`);\n                            return this.convertComputeBaselineToBaselineInfo(status);\n                        }\n                    }\n                    else {\n                        logger.debug(`getStatus function not found in compute-baseline package`);\n                    }\n                }\n                catch (error) {\n                    logger.debug(`Error using compute-baseline for ${bcdKey}: ${error}`);\n                }\n            }\n            logger.debug(`No web-features data found for: ${featureName}`);\n            return null;\n        }\n        catch (error) {\n            logger.debug(`Error accessing web-features package: ${error}`);\n            return null;\n        }\n    }\n    mapFeatureNameToWebFeatureId(featureName) {\n        const mappings = {\n            'display: grid': ['grid'],\n            'display: flex': ['flexbox'],\n            ':has': ['has'],\n            '@container': ['container-queries'],\n            'container-type': ['container-queries'],\n            'clamp': ['css-math-functions'],\n            'min': ['css-math-functions'],\n            'max': ['css-math-functions'],\n            'aspect-ratio': ['aspect-ratio'],\n            'gap': ['gap'],\n            'scroll-behavior': ['scroll-behavior'],\n            'position: sticky': ['sticky'],\n            'backdrop-filter': ['backdrop-filter'],\n            'fetch': ['fetch'],\n            'async function': ['async-await'],\n            'await ': ['async-await'],\n            '=>': ['arrow-functions'],\n            'IntersectionObserver': ['intersection-observer'],\n            'ResizeObserver': ['resize-observer'],\n            'Promise.': ['promises'],\n            'dialog': ['dialog'],\n            'loading=\"lazy\"': ['loading-lazy'],\n            'details': ['details'],\n            'picture': ['picture'],\n        };\n        return mappings[featureName] || [featureName.toLowerCase()];\n    }\n    mapFeatureNameToBCDKey(featureName) {\n        const mappings = {\n            'display: grid': 'css.properties.display.grid',\n            'display: flex': 'css.properties.display.flex',\n            'position: sticky': 'css.properties.position.sticky',\n            'aspect-ratio': 'css.properties.aspect-ratio',\n            'gap': 'css.properties.gap',\n            'scroll-behavior': 'css.properties.scroll-behavior',\n            'backdrop-filter': 'css.properties.backdrop-filter',\n            'container-type': 'css.properties.container-type',\n            ':has': 'css.selectors.has',\n            ':is': 'css.selectors.is',\n            ':where': 'css.selectors.where',\n            ':focus-visible': 'css.selectors.focus-visible',\n            'clamp': 'css.types.clamp',\n            'min': 'css.types.min',\n            'max': 'css.types.max',\n            'fetch': 'api.fetch',\n            'IntersectionObserver': 'api.IntersectionObserver',\n            'ResizeObserver': 'api.ResizeObserver',\n            'dialog': 'html.elements.dialog',\n            'details': 'html.elements.details',\n            'picture': 'html.elements.picture',\n            'loading=\"lazy\"': 'html.elements.img.loading',\n        };\n        return mappings[featureName] || null;\n    }\n    convertWebFeatureToBaselineInfo(webFeature) {\n        const status = webFeature.status.baseline;\n        let baselineStatus;\n        if (status === 'high') {\n            baselineStatus = 'high';\n        }\n        else if (status === 'low') {\n            baselineStatus = 'limited';\n        }\n        else {\n            baselineStatus = 'low';\n        }\n        const supportedBrowsers = [];\n        const support = webFeature.status.support || {};\n        for (const [browser, version] of Object.entries(support)) {\n            if (typeof version === 'string') {\n                const browserMap = {\n                    'chrome': 'chrome',\n                    'chrome_android': 'chrome',\n                    'firefox': 'firefox',\n                    'firefox_android': 'firefox',\n                    'safari': 'safari',\n                    'safari_ios': 'safari',\n                    'edge': 'edge',\n                };\n                const mappedBrowser = browserMap[browser];\n                if (mappedBrowser) {\n                    supportedBrowsers.push({\n                        browser: mappedBrowser,\n                        version: version,\n                    });\n                }\n            }\n        }\n        return {\n            status: baselineStatus,\n            isBaseline2023: Boolean(webFeature.status.baseline_high_date &&\n                new Date(webFeature.status.baseline_high_date).getFullYear() <= 2023),\n            isWidelySupported: status === 'high',\n            supportedBrowsers,\n            dateSupported: webFeature.status.baseline_high_date ||\n                webFeature.status.baseline_low_date || null,\n        };\n    }\n    convertComputeBaselineToBaselineInfo(computeStatus) {\n        const status = computeStatus.baseline;\n        let baselineStatus;\n        if (status === 'high') {\n            baselineStatus = 'high';\n        }\n        else if (status === 'low') {\n            baselineStatus = 'limited';\n        }\n        else {\n            baselineStatus = 'low';\n        }\n        const supportedBrowsers = [];\n        const support = computeStatus.support || {};\n        for (const [browser, version] of Object.entries(support)) {\n            if (typeof version === 'string') {\n                supportedBrowsers.push({\n                    browser: browser.toLowerCase(),\n                    version: version,\n                });\n            }\n        }\n        return {\n            status: baselineStatus,\n            isBaseline2023: Boolean(computeStatus.baseline_high_date &&\n                new Date(computeStatus.baseline_high_date).getFullYear() <= 2023),\n            isWidelySupported: status === 'high',\n            supportedBrowsers,\n            dateSupported: computeStatus.baseline_high_date ||\n                computeStatus.baseline_low_date || null,\n        };\n    }\n    getFallbackBaselineData(featureName) {\n        const fallbackData = {\n            'display: grid': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '57' },\n                    { browser: 'firefox', version: '52' },\n                    { browser: 'safari', version: '10.1' },\n                    { browser: 'edge', version: '16' },\n                ],\n                dateSupported: '2017-03-01',\n            },\n            'grid-template': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '57' },\n                    { browser: 'firefox', version: '52' },\n                    { browser: 'safari', version: '10.1' },\n                    { browser: 'edge', version: '16' },\n                ],\n                dateSupported: '2017-03-01',\n            },\n            'grid-template-columns': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '57' },\n                    { browser: 'firefox', version: '52' },\n                    { browser: 'safari', version: '10.1' },\n                    { browser: 'edge', version: '16' },\n                ],\n                dateSupported: '2017-03-01',\n            },\n            'container-name': {\n                status: 'limited',\n                isBaseline2023: false,\n                isWidelySupported: false,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '105' },\n                    { browser: 'firefox', version: '110' },\n                    { browser: 'safari', version: '16' },\n                    { browser: 'edge', version: '105' },\n                ],\n                dateSupported: '2023-02-01',\n            },\n            'display: flex': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '29' },\n                    { browser: 'firefox', version: '28' },\n                    { browser: 'safari', version: '9' },\n                    { browser: 'edge', version: '12' },\n                ],\n                dateSupported: '2014-03-01',\n            },\n            ':has': {\n                status: 'limited',\n                isBaseline2023: false,\n                isWidelySupported: false,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '105' },\n                    { browser: 'firefox', version: '103' },\n                    { browser: 'safari', version: '15.4' },\n                    { browser: 'edge', version: '105' },\n                ],\n                dateSupported: '2022-08-01',\n            },\n            '@container': {\n                status: 'limited',\n                isBaseline2023: false,\n                isWidelySupported: false,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '105' },\n                    { browser: 'firefox', version: '110' },\n                    { browser: 'safari', version: '16' },\n                    { browser: 'edge', version: '105' },\n                ],\n                dateSupported: '2023-02-01',\n            },\n            'clamp': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '79' },\n                    { browser: 'firefox', version: '75' },\n                    { browser: 'safari', version: '13.1' },\n                    { browser: 'edge', version: '79' },\n                ],\n                dateSupported: '2020-03-01',\n            },\n            'fetch': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '42' },\n                    { browser: 'firefox', version: '39' },\n                    { browser: 'safari', version: '10.1' },\n                    { browser: 'edge', version: '14' },\n                ],\n                dateSupported: '2017-03-01',\n            },\n            'async function': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '55' },\n                    { browser: 'firefox', version: '52' },\n                    { browser: 'safari', version: '10.1' },\n                    { browser: 'edge', version: '15' },\n                ],\n                dateSupported: '2017-03-01',\n            },\n            '=>': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '45' },\n                    { browser: 'firefox', version: '22' },\n                    { browser: 'safari', version: '10' },\n                    { browser: 'edge', version: '12' },\n                ],\n                dateSupported: '2016-10-01',\n            },\n            'IntersectionObserver': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '51' },\n                    { browser: 'firefox', version: '55' },\n                    { browser: 'safari', version: '12.1' },\n                    { browser: 'edge', version: '15' },\n                ],\n                dateSupported: '2019-03-01',\n            },\n            'ResizeObserver': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '64' },\n                    { browser: 'firefox', version: '69' },\n                    { browser: 'safari', version: '13.1' },\n                    { browser: 'edge', version: '79' },\n                ],\n                dateSupported: '2020-01-01',\n            },\n            'structuredClone': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '98' },\n                    { browser: 'firefox', version: '94' },\n                    { browser: 'safari', version: '15.4' },\n                    { browser: 'edge', version: '98' },\n                ],\n                dateSupported: '2022-03-01',\n            },\n            'dialog': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '37' },\n                    { browser: 'firefox', version: '98' },\n                    { browser: 'safari', version: '15.4' },\n                    { browser: 'edge', version: '79' },\n                ],\n                dateSupported: '2022-03-01',\n            },\n            'loading=\"lazy\"': {\n                status: 'high',\n                isBaseline2023: true,\n                isWidelySupported: true,\n                supportedBrowsers: [\n                    { browser: 'chrome', version: '76' },\n                    { browser: 'firefox', version: '75' },\n                    { browser: 'safari', version: '15.4' },\n                    { browser: 'edge', version: '79' },\n                ],\n                dateSupported: '2022-03-01',\n            },\n        };\n        const data = fallbackData[featureName];\n        if (data) {\n            logger.debug(`Found fallback baseline data for: ${featureName}`);\n            return data;\n        }\n        logger.debug(`No baseline data found for: ${featureName}, using conservative estimate`);\n        return {\n            status: 'unknown',\n            isBaseline2023: false,\n            isWidelySupported: false,\n            supportedBrowsers: [],\n            dateSupported: null,\n        };\n    }\n    isSupportedInBrowser(baselineInfo, targetBrowser) {\n        const [browser, version] = this.parseBrowserTarget(targetBrowser);\n        const supportData = baselineInfo.supportedBrowsers.find(b => b.browser.toLowerCase() === browser.toLowerCase());\n        if (!supportData) {\n            return false;\n        }\n        return this.compareVersions(supportData.version, version) <= 0;\n    }\n    parseBrowserTarget(target) {\n        const match = target.match(/(\\w+)\\s*(?:>=|>)?\\s*(\\d+(?:\\.\\d+)?)/);\n        if (match && match[1] && match[2]) {\n            return [match[1], match[2]];\n        }\n        return [target, '0'];\n    }\n    compareVersions(version1, version2) {\n        const v1parts = version1.split('.').map(Number);\n        const v2parts = version2.split('.').map(Number);\n        for (let i = 0; i < Math.max(v1parts.length, v2parts.length); i++) {\n            const v1part = v1parts[i] || 0;\n            const v2part = v2parts[i] || 0;\n            if (v1part > v2part)\n                return 1;\n            if (v1part < v2part)\n                return -1;\n        }\n        return 0;\n    }\n}\n//# sourceMappingURL=baseline.service.js.map"],"names":[],"sourceRoot":""}